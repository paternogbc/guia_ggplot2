ylab("Frequência")
```{r message=FALSE, warning=F}
ggplot(iris, aes(y = Sepal.Length, x = Species, fill = Species)) +
geom_boxplot(show.legend = F) +
theme_classic(base_size = 18) +
xlab("Comprimento da sépala (mm)") +
ylab("Frequência")
ggplot(iris, aes(y = Sepal.Length, x = Species, fill = Species)) +
geom_boxplot(show.legend = F) +
theme_classic(base_size = 18) +
xlab("Espécie") +
ylab("Comprimento da sépala (mm)")
ggplot(iris, aes(y = Sepal.Length, x = Species, fill = Species)) +
geom_boxplot(show.legend = F) +
scale_y_continuous(limits = c(4,8), breaks = seq(4,8,1)) +
theme_classic(base_size = 18) +
xlab("Espécie") +
ylab("Comprimento da sépala (mm)")
ggplot(iris, aes(y = Sepal.Length, x = Species, fill = Species)) +
geom_boxplot(show.legend = F, alpha = .5) +
scale_y_continuous(limits = c(4,8), breaks = seq(4,8,1)) +
theme_classic(base_size = 18) +
xlab("Espécie") +
ylab("Comprimento da sépala (mm)")
ggplot(iris, aes(y = Sepal.Length, x = Species)) +
geom_boxplot(outlier.color = "red")
ggplot(iris, aes(y = Sepal.Length, x = Species)) +
geom_boxplot(notch = T)
ggplot(iris, aes(y = Sepal.Length, x = Species, fill = Species)) +
geom_boxplot(show.legend = F, alpha = .5, varwidth = T) +
scale_y_continuous(limits = c(4,8), breaks = seq(4,8,1)) +
theme_classic(base_size = 18) +
xlab("Espécie") +
ylab("Comprimento da sépala (mm)")
ggplot(iris, aes(y = Sepal.Length, x = Species, fill = Species)) +
geom_boxplot(show.legend = F, alpha = .5) +
facet_grid(~Species) +
scale_y_continuous(limits = c(4,8), breaks = seq(4,8,1)) +
theme_classic(base_size = 18) +
xlab("Espécie") +
ylab("Comprimento da sépala (mm)")
ggplot(iris, aes(y = Sepal.Length, x = Species, fill = Species)) +
geom_boxplot(show.legend = F, alpha = .5) +
scale_y_continuous(limits = c(4,8), breaks = seq(4,8,1)) +
theme_classic(base_size = 18) +
xlab("Espécie") +
ylab("Comprimento da sépala (mm)")
ggplot(iris, aes(y = Sepal.Length, x = Species, fill = Species)) +
geom_bw(show.legend = F, alpha = .5) +
scale_y_continuous(limits = c(4,8), breaks = seq(4,8,1)) +
theme_classic(base_size = 18) +
xlab("Espécie") +
ylab("Comprimento da sépala (mm)")
ggplot(iris, aes(y = Sepal.Length, x = Species, fill = Species)) +
geom_boxplot(show.legend = F, alpha = .5) +
scale_y_continuous(limits = c(4,8), breaks = seq(4,8,1)) +
theme_bw(base_size = 18) +
xlab("Espécie") +
ylab("Comprimento da sépala (mm)")
ggplot(iris, aes(y = Sepal.Length, x = Species, fill = Species)) +
geom_boxplot(show.legend = F, alpha = .5) +
scale_y_continuous(limits = c(4,8), breaks = seq(4,8,1)) +
theme_classic(base_size = 18) +
xlab("Espécie") +
ylab("Comprimento da sépala (mm)")
# Carrgue um banco de dados
data("iris")
# Carrgue um banco de dados
data("iris")
# Histograma de uma variável contínua
ggplot(iris, aes(x = Sepal.Length)) +
geom_density()
library(ggplot2)
# Carrgue um banco de dados
data("iris")
# Histograma de uma variável contínua
ggplot(iris, aes(x = Sepal.Length)) +
geom_density()
# Histograma com cores para diferentes categorias com sobreposição
ggplot(iris, aes(x = Sepal.Length, fill = Species)) +
geom_density() +
ggtitle("Com sobreposiçao")
# Histograma com cores para diferentes categorias sem sobreposição
ggplot(iris, aes(x = Sepal.Length, fill = Species)) +
geom_histogram(position = "dodge") +
ggtitle("Sem sobreposiçao")
# Histograma com cores para diferentes categorias sem sobreposição
ggplot(iris, aes(x = Sepal.Length, fill = Species)) +
geom_density(position = "dodge") +
ggtitle("Sem sobreposiçao")
# Desnity plot com cores para diferentes categorias com sobreposição
ggplot(iris, aes(x = Sepal.Length, fill = Species)) +
geom_density(position = "dodge", alpha = .5) +
ggtitle("Com sobreposiçao")
# Desnity plot com cores para diferentes categorias com sobreposição
ggplot(iris, aes(x = Sepal.Length, fill = Species)) +
geom_density(alpha = .5) +
ggtitle("Com sobreposiçao")
ggplot(iris, aes(x = Sepal.Length)) +
geom_density(color = "white", fill = "lightblue") +
theme_classic(base_size = 18) +
scale_x_continuous(breaks = seq(from = 4,to = 8,by = 1), limits = c(4,8)) +
xlab("Comprimento da sépala (mm)") +
ylab("Frequência")
ggplot(iris, aes(x = Sepal.Length, fill = Species)) +
geom_density(color = "white", fill = "lightblue") +
theme_classic(base_size = 18) +
scale_x_continuous(breaks = seq(from = 4,to = 8,by = 1), limits = c(4,8)) +
xlab("Comprimento da sépala (mm)") +
ylab("Frequência")
ggplot(iris, aes(x = Sepal.Length, fill = Species)) +
geom_density() +
theme_classic(base_size = 18) +
scale_x_continuous(breaks = seq(from = 4,to = 8,by = 1), limits = c(4,8)) +
xlab("Comprimento da sépala (mm)") +
ylab("Frequência")
ggplot(iris, aes(x = Sepal.Length, fill = Species)) +
geom_density(alpha = .5) +
theme_classic(base_size = 18) +
scale_x_continuous(breaks = seq(from = 4,to = 8,by = 1), limits = c(4,8)) +
xlab("Comprimento da sépala (mm)") +
ylab("Density")
# Density plot de uma variável contínua
ggplot(iris, aes(x = Sepal.Length)) +
geom_density(fill = "tomato")
library(ggplot2)
# Carrgue um banco de dados
data("iris")
# Histograma de uma variável contínua
ggplot(iris, aes(x = Sepal.Length)) +
geom_histogram()
bookdown:::bookdown_file("templates/default.html")
file.edit(bookdown:::bookdown_file("templates/default.html")
)
bookdown::bookdown_site
bookdown::bookdown_site()
knitr::opts_chunk$set(echo = TRUE, results='hold', fig.show='hold')
library(knitr)
knitr::include_graphics('img/capa_livro2.jpg', dpi = NA)
knitr::opts_chunk$set(echo = TRUE, results='hold', fig.show='hold')
library(knitr)
knitr::include_graphics("img/R.jpeg")
knitr::opts_chunk$set(echo = TRUE, results='hold', fig.show='hold')
library(knitr)
knitr::include_graphics("img/capa_livro2.jpg", dpi = NA)
knitr::include_graphics("img/R.jpeg")
knitr::include_graphics("img/rsutio.jpeg")
# Boxplot
ggplot(iris, aes(y = Sepal.Length, x = Species)) +
geom_bar()
library(ggplot2)
# Carrgue um banco de dados
data("iris")
# Boxplot
ggplot(iris, aes(y = Sepal.Length, x = Species)) +
geom_bar()
# Boxplot
ggplot(iris, aes(y = Sepal.Length, x = Species)) +
geom_bar(stat = "identity")
iris
# Simulando um banco de dados
df <- data.frame(dose=c("Baixa", "Média", "Alta"),
len=c(4.2, 10, 29.5))
# Simulando um banco de dados
df <- data.frame(dose=c("Baixa", "Média", "Alta"),
len=c(4.2, 10, 29.5))
# Simulando um banco de dados
df <- data.frame(dose =c("Baixa", "Média", "Alta"),
comprimento =c(4.2, 10, 29.5))
# Boxplot
ggplot(df, aes(y = comprimento, x = dose)) +
geom_bar(stat = "identity")
# Simulando um banco de dados
df <- data.frame(dose =c("Baixa", "Média", "Alta"),
comprimento =c(4.2, 10, 29.5))
# Boxplot
ggplot(df, aes(y = comprimento, x = dose)) +
geom_bar()
# Boxplot
ggplot(df, aes(y = comprimento, x = dose)) +
geom_bar(stat = "identity")
# Simulando um banco de dados
df <- data.frame(dose =c("Baixa", "Média", "Alta"),
comprimento =c(4.2, 10, 29.5))
# Boxplot
ggplot(df, aes(y = comprimento, x = dose)) +
geom_bar(stat = "identity")
df
kable(df)
# Simulando um banco de dados
df <- data.frame(dose=c("Baixa", "Média", "Alta"),
comprimento=c(4.2, 10, 29.5))
head(df)
# Boxplot
ggplot(df, aes(y = Sepal.Length, x = Species)) +
geom_bar(stat = "identity")
# Boxplot
ggplot(df, aes(y = comprimento, x = dose)) +
geom_bar(stat = "identity")
iris
cars
data("airquality")
airquality
data("AirPassengers")
AirPassengers
data("sleep")
sleep
data("msleep")
msleep
data("HairEyeColor")
HairEyeColor
data("Orange")
Orgamge
Organge
Orange
data("diamonds")
diamonds
View(diamonds)
# Simulando um banco de dados
diamonds
geom_bar()
?geom_bar()
g <- ggplot(mpg, aes(class))
# Number of cars in each class:
g + geom_bar()
# Total engine displacement of each class
g + geom_bar(aes(weight = displ))
?mpg
class
mpg$class
g + geom_bar(aes(fill = drv))
df <- data.frame(trt = c("a", "b", "c"), outcome = c(2.3, 1.9, 3.2))
ggplot(df, aes(trt, outcome)) +
geom_col()
df <- data.frame(trt = c("a", "b", "c"), outcome = c(2.3, 1.9, 3.2))
ggplot(df, aes(trt, outcome)) +
geom_col()
trt
outcome
ggplot(df, aes(trt, outcome)) +
geom_bar()
ggplot(df, aes(trt, outcome)) +
geom_bar(stat = "identity")
ggplot(df, aes(trt, outcome)) +
geom_col(stat = "identity")
ggplot(df, aes(trt, outcome)) +
geom_col(width = 2)
ggplot(df, aes(trt, outcome)) +
geom_col(width = 1)
ggplot(df, aes(trt, outcome)) +
geom_col(width = .1)
ggplot(df, aes(trt, outcome)) +
geom_col(width = .5)
# Simulando um banco de dados
df <- data.frame(tratamento = c("a", "b", "c"),
outcome = c(1.3, 1.9, 3.2))
# Boxplot
ggplot(df
, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity")
# Boxplot
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity")
# Simulando um banco de dados
df <- data.frame(tratamento = c("a", "b", "c"),
tamanho = c(1.3, 1.9, 3.2))
# Boxplot
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity")
# Boxplot
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", fill = "tomato")
#Gráfico de Barras com preenchimento colorido
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", fill = "tomato")
#Gráfico de Barras com contorno colorido
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", color = "tomato")
#Gráfico de Barras com preenchimento colorido
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", width = .5) +
ggtitle("width = .5")
#Gráfico de Barras com largura modificada
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", width = .5) +
ggtitle("width = .5")
#Gráfico de Barras com largura modificada
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", width = 1.5) +
ggtitle("width = .5")
#Gráfico de Barras com largura modificada
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", width = .5) +
ggtitle("width = .5")
#Gráfico de Barras com largura modificada
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", width = 0.25) +
ggtitle("width = .5")
#Gráfico de Barras com largura modificada
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", width = 1) +
ggtitle("width = .5")
#Gráfico de Barras com largura modificada
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", width = 0.25) +
ggtitle("width = .5")
#Gráfico de Barras com largura modificada
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", width = .75) +
ggtitle("width = .5")
#Gráfico de Barras com largura modificada
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", width = 0.25) +
ggtitle("width = .5")
#Gráfico de Barras com largura modificada
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", width = .75) +
ggtitle("width = .5")
#Gráfico de Barras com largura modificada
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", width = 0.25) +
ggtitle("width = .5")
#Gráfico de Barras com preenchimento colorido
ggplot(df, aes(y = tamanho, x = tratamento, fill = tratamento)) +
geom_bar(stat = "identity")
#Gráfico de Barras com preenchimento colorido
ggplot(df, aes(y = tamanho, x = tratamento, fill = tratamento)) +
geom_bar(stat = "identity") +
scale_y_continuous(limits = c(4,8), breaks = seq(4,8,1)) +
theme_classic(base_size = 18) +
xlab("Espécie") +
ylab("Comprimento da sépala (mm)")
#Gráfico de Barras com preenchimento colorido
ggplot(df, aes(y = tamanho, x = tratamento, fill = tratamento)) +
geom_bar(stat = "identity") +
#scale_y_continuous(limits = c(4,8), breaks = seq(4,8,1)) +
theme_classic(base_size = 18) +
xlab("Espécie") +
ylab("Comprimento da sépala (mm)")
#Gráfico de Barras com preenchimento colorido
ggplot(df, aes(y = tamanho, x = tratamento, fill = tratamento)) +
geom_bar(stat = "identity", alhp = .5) +
#scale_y_continuous(limits = c(4,8), breaks = seq(4,8,1)) +
theme_classic(base_size = 18) +
xlab("Espécie") +
ylab("Comprimento da sépala (mm)")
#Gráfico de Barras com preenchimento colorido
ggplot(df, aes(y = tamanho, x = tratamento, fill = tratamento)) +
geom_bar(stat = "identity", alhpa = .5) +
#scale_y_continuous(limits = c(4,8), breaks = seq(4,8,1)) +
theme_classic(base_size = 18) +
xlab("Espécie") +
ylab("Comprimento da sépala (mm)")
#Gráfico de Barras com preenchimento colorido
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity") +
#scale_y_continuous(limits = c(4,8), breaks = seq(4,8,1)) +
theme_classic(base_size = 18) +
xlab("Espécie") +
ylab("Comprimento da sépala (mm)")
#Gráfico de Barras com preenchimento colorido
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", fill = "lightblue") +
#scale_y_continuous(limits = c(4,8), breaks = seq(4,8,1)) +
theme_classic(base_size = 18) +
xlab("Espécie") +
ylab("Comprimento da sépala (mm)")
#Gráfico de Barras com preenchimento colorido
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", fill = "lightblue") +
#scale_y_continuous(limits = c(4,8), breaks = seq(4,8,1)) +
theme_classic(base_size = 18) +
xlab("Tratamento") +
ylab("Comprimento do Caule (cm)")
#Gráfico de Barras
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", fill = "lightblue") +
scale_y_continuous(limits = c(0,3), breaks = seq(0,3,.5)) +
theme_classic(base_size = 18) +
xlab("Tratamento") +
ylab("Comprimento do plântula (cm)")
df
#Gráfico de Barras
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", fill = "lightblue") +
scale_y_continuous(limits = c(0,3.5), breaks = seq(0,3.5,.5)) +
theme_classic(base_size = 18) +
xlab("Tratamento") +
ylab("Comprimento do plântula (cm)")
#Gráfico de Barras
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", fill = gray(.8)) +
scale_y_continuous(limits = c(0,3.5), breaks = seq(0,3.5,.5)) +
theme_classic(base_size = 18) +
xlab("Tratamento") +
ylab("Comprimento do plântula (cm)")
#Gráfico de Barras
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", fill = gray(.3)) +
scale_y_continuous(limits = c(0,3.5), breaks = seq(0,3.5,.5)) +
theme_classic(base_size = 18) +
xlab("Tratamento") +
ylab("Comprimento do plântula (cm)")
#Gráfico de Barras
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", fill = gray(.3)) +
scale_y_continuous(limits = c(0,3.5), breaks = seq(0,3.5,.5)) +
theme_classic(base_size = 18) +
xlab("Tratamento") +
ylab("Comprimento do plântula (cm)")
#Gráfico de Barras
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", fill = gray(.3)) +
scale_y_continuous(limits = c(0,3.5), breaks = seq(0,3.5,.5)) +
theme_classic(base_size = 18) +
xlab("Tratamento") +
ylab("Comprimento do plântula (cm)")
#Gráfico de Barras
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity", fill = gray(.3)) +
scale_y_continuous(limits = c(0,3.5), breaks = seq(0,3.5,.5)) +
theme_classic(base_size = 18) +
xlab("Tratamento") +
ylab("Comprimento do plântula (cm)")
#Gráfico de Barras com preenchimento colorido
ggplot(df, aes(y = tamanho, x = tratamento)) +
geom_bar(stat = "identity") +
coord_flip()
library(ggplot2)
# Histograma de uma variável contínua
ggplot(iris, aes(x = Sepal.Length)) +
geom_dotplot()
# Carrgue um banco de dados
data("iris")
ggplot(iris, aes(x = Sepal.Length)) +
geom_dotplot()
ggplot(iris, aes(x = Sepal.Length)) +
geom_dotplot(fill = "tomato")
ggplot(iris, aes(x = Sepal.Length)) +
geom_dotplot(color = "red")
ggplot(iris, aes(x = Sepal.Length)) +
geom_dotplot(color = "red", fill = "gray")
ggplot(iris, aes(x = Sepal.Length)) +
geom_dotplot(fill = "tomato")
```{r message=FALSE, warning=F, out.width="50%"}
ggplot(iris, aes(x = Sepal.Length)) +
geom_dotplot(fill = "tomato", alpha = .5)
ggplot(iris, aes(x = Sepal.Length)) +
geom_dotplot(color = "white", fill = "lightblue") +
theme_classic(base_size = 18) +
scale_x_continuous(breaks = seq(from = 4,to = 8,by = 1), limits = c(4,8)) +
xlab("Comprimento da sépala (mm)") +
ylab("Frequência")
# Carrgue um banco de dados
data("iris")
ggplot(iris, aes(x = Sepal.Length)) +
geom_dotplot()
ggplot(iris, aes(x = Sepal.Length)) +
geom_histogram()
# Carrgue um banco de dados
data("iris")
ggplot(iris, aes(x = Sepal.Length)) +
geom_dotplot()
ggplot(iris, aes(x = Sepal.Length)) +
geom_histogram()
ggplot(iris, aes(x = Sepal.Length)) +
geom_dotplot(color = "white", fill = "Tomato") +
theme_classic(base_size = 18) +
scale_x_continuous(breaks = seq(from = 4,to = 8,by = 1), limits = c(4,8)) +
xlab("Comprimento da sépala (mm)") +
ylab("Frequência")
data(Langren1644)
install.packages("Langren")
library(ggtemplate)
?ggsummary()
?ggsummary(rnorm(19))
ggsummary(rnorm(19))
ggsummary(rnorm(100))
ggsummary(rnorm(100))
ggsummary(rnorm(1000))
ggshapiro(rnorm(1000))
ggshapiro(runif(1000))
ggshapiro(test = runif(1000))
test <- rnorm(100)
ggshapiro(test
)
ggshapiro(test)
ggshapiro(test)[1]
ggshapiro(test)[1] + xlab("ddd")
ggshapiro(test)[[1]] + xlab("ddd")
ggshapiro(test)[[2]] + xlab("ddd")
ggshapiro(test)[[1]]
ggshapiro(test)[[1]] + theme_classic()
ggshapiro(test)[[1]] + theme_bw()
ggshapiro(test)[[1]] + theme_classic2()
ggshapiro(test)[[1]] + theme_dark()
ggshapiro(test)[[1]] + theme_void()
ggshapiro(test)[[1]] + theme_transparent()
ggshapiro(test)[[1]] + theme_get()
ggshapiro(test)[[1]] + theme_gray()
ggshapiro(test)[[1]] + theme_pubclean()
ggshapiro(test)[[1]] + theme_pubr()
ggshapiro(test)[[1]] + theme_linedraw()
ggshapiro(test)[[1]] + theme_pubclean()
ggshapiro(test)[[1]] + labs_pubr(base_size = 12)
ggshapiro(test)[[1]] + labs_pubr(base_size = 18)
ggshapiro(test)[[1]] + labs_pubr(base_size = 24)
ggshapiro(test)[[1]] + labs_pubr(base_size = 24, base_family = 1)
ggshapiro(test)[[1]] + labs_pubr(base_size = 24, base_family = 2)
?ggtemplate
??ggtemplate
??ggsummary
